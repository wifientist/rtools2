"""Initial tables

Revision ID: 424461e687d8
Revises: 
Create Date: 2025-04-26 22:33:20.196917

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '424461e687d8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_bids_id', table_name='bids')
    op.drop_table('bids')
    op.drop_index('ix_proposals_id', table_name='proposals')
    op.drop_table('proposals')
    op.add_column('users', sa.Column('otp_code', sa.String(), nullable=True))
    op.add_column('users', sa.Column('otp_expires_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('last_authenticated_at', sa.DateTime(), nullable=True))
    op.drop_column('users', 'hashed_password')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('users', 'last_authenticated_at')
    op.drop_column('users', 'otp_expires_at')
    op.drop_column('users', 'otp_code')
    op.create_table('proposals',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('proposals_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('budget', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deadline', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='proposals_created_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='proposals_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_proposals_id', 'proposals', ['id'], unique=False)
    op.create_table('bids',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bidder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('submitted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bidder_id'], ['users.id'], name='bids_bidder_id_fkey'),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposals.id'], name='bids_proposal_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='bids_pkey')
    )
    op.create_index('ix_bids_id', 'bids', ['id'], unique=False)
    # ### end Alembic commands ###
