"""change userapikey to tenant

Revision ID: eefef24bad69
Revises: 3d781732d6fb
Create Date: 2025-04-28 10:28:23.322124

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'eefef24bad69'
down_revision: Union[str, None] = '3d781732d6fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('users_active_api_key_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'active_api_key_id')
    op.drop_table('user_api_keys')
    op.add_column('users', sa.Column('active_tenant_id', sa.Integer(), nullable=True))
    #op.drop_index('ix_user_api_keys_user_id', table_name='user_api_keys')
    #op.add_column('users', sa.Column('active_tenant_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'users', 'tenants', ['active_tenant_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('active_api_key_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key('users_active_api_key_id_fkey', 'users', 'user_api_keys', ['active_api_key_id'], ['id'])
    op.drop_column('users', 'active_tenant_id')
    op.create_table('user_api_keys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('instance_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('encrypted_client_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('encrypted_client_secret', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_api_keys_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_api_keys_pkey')
    )
    op.create_index('ix_user_api_keys_user_id', 'user_api_keys', ['user_id'], unique=False)
    # ### end Alembic commands ###
